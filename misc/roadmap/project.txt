
SAGA Project Roadmap
--------------------

 Why?
 ----

  The SAGA API implementations are, in many aspects, at a crossroad:
  they have been matured enough to be useful for the target
  communities, and are still able to serve that community on todays
  DCIs.  That situation will necessarily change at some point in time:
  while the implementations will likely continue to improve, the
  landscape of DCIs will also continue to evolve, but will likely do
  so in directions which are very hard to keep up with for the SAGA
  API, unless it is seeing significant wider adoption.  In some sense,
  one has to find the sweet-spot of implementation and DCI stability
  which promises the maximum benefit to the end user: not prematurely
  providing immature implementation, but also not providing great
  implementations for outdated infrastructures and applications (usage
  modes).

  Considering that background, it seems obvious why the current
  adoption efforts on the big international DCIs is so important: it
  is the most promising way for increaing the SAGA adoption in the
  near future -- which only makes sense, however, if the quality of
  the SAGA implementations is *really* able to serve those DCI's user
  communities.  In order to support both aspects, we are trying to
  define a roadmap of the 'SAGA Project', with the hope that this
  roadmap will help to coordinate the global efforts towards those
  goals.

  It should be noted that over the past 12 months or so, the SAGA
  project has already assumed an active and explicit role, in
  particular towards the SAGA deployment and adoption efforts on EGI
  and XSEDE.  For example, the MoU and SLA towards EGI as signed as
  'The SAGA Project'.  Those efforts are, however, not yet fully
  representing the whole SAGA project, but are designed and expected
  to grow towards support from the as of yet missing part(ner)s.
 

 What?
 -----

  "The SAGA Project" is a very loosely defined entity.  It can best
  (but not exactly) be defined as a group of people who are advocating
  and driving the SAGA specification, implementation and adoption
  efforts.  That group has significant overlap with SAGA users -- but
  in a first approximation, one could argue that SAGA users in general
  are not a core part of the SAGA project.

  One problem with the above definition is that the so-defined group
  has no coherent organizational structure -- it is 'loosely coupled'.
  That is not a problem, but rather a healthy aspect of any Open
  Source project, but it also makes it somewhat difficult to define
  and implement a roadmap for the project in general and realistic
  terms.  

  Thus, one of the first action items should actually be to define
  that group in somewhat more specific terms, and implement some
  structure for it which would allow to proceed in a more coordinated
  fashion.  It should be noted that this structure is not necessarily
  the same as is used for the SAGA-C++ development group, and in fact
  maybe it *should* not be the same.

  TODO: define and implement an IT infrastructure for the SAGA Project
  TODO: implement a coordination layer on top of that infrastructure


  Further complicating the structure of the SAGA Project is the fact
  that there is not single software deliverable called 'the SAGA
  implementation', but that in fact the project has to coordinate a
  relatively large number of loosely coupled software modules:
  different implementations of the SAGA API sepcification, in
  different technologies and programming languages, different
  additional language bindings for these implementations, and a
  variety of middleware adaptors from different sources, for the
  different implementations and technologies.  The unifying aspect,
  the SAGA API specification, has little influence on the
  implementation level coherence of the different software modules.

  Nevertheless, it is after all the same user community that all those
  modules try to serve, and even if development of the various
  software modules is hard to coordinate, the respective deployment,
  adoption, documentation, support and outreach efforts should become
  more coherent and synchronized, beyond the boundaries of the
  individual software projects.


 How?
 ----
  
  IT infrastructure
  -----------------

    TODO: activate 
          general@saga-project.org,
          deployment@saga-project.org
          users@saga-project.org
          support@saga-project.org
          devel@saga-project.org ?

    TODO: implement and structure    http://www.saga-project.org/
    TODO: sensibly and reliably fill http://www.saga-project.org/docs/
    TODO: *consider* unified repository and tracker (not necessity)


  Deployment
  ----------

    TODO: create coherent set of RPMs, DEBs, fo *all* modules
    TODO: get packages into main RedHat and Ubuntu repositories
    TODO: leverage on the above to deploy on EGI, XSEDE, Naregi, ...


  Adoption
  --------

    TODO: present SAGA as a coherent set of modules, not as a mixture
          of implementations (think Gnome / KDE / ...)
    TODO: ...


  Documentation
  -------------

    TODO: complete and coherent set of tutorials and manuals
    TODO: single convincing entry point for all SAGA module's
          documentation on http://www.saga-projcet.org/docs/
    TODO: man pages, doxygen, JavaDoc, PythonDoc, ...
          at http://www.saga-projcet.org/docs/
    TODO: adaptor writers tutorial ebenda.
          

  Support
  -------

    TODO: list all bug trackers at http://www.saga-project.org/support/
    TODO: make sure bugs get forwarded between trackers
    TODO: create *and use* unified support@saga-project.org list
    TODO: create *and use* unified users@saga-project.org list


  Outreach
  --------
  
    TODO: all of the above ;-)
    TODO: ...?


