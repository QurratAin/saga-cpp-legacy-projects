
###############################################################
#
# endpoint configurations
#
[mandelbrot.backends.fork-local]
  url   = fork://localhost/
  ctype = UserPass
  user  = 
  pass  = 
  cert  = 
  key   = 
  proxy = 
  cadir = 
  exe   = ${SAGA_LOCATION}/bin/saga-run.sh
  pwd   = 
  njobs = 1
  admin = andre--interop.fork@merzky.net

[mandelbrot.backends.bespp-local]
  url   = https://localhost:1235/
  ctype = UserPass
  user  = merzky
  pass  = aaa
  cert  = 
  key   = 
  proxy = 
  cadir = 
  exe   = ${SAGA_LOCATION}/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.ssh-local]
  url   = ssh://localhost/
  ctype = ssh
  user  = 
  pass  = 
  cert  = 
  key   = 
  proxy = 
  cadir = 
  exe   = ${SAGA_LOCATION}/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.gsissh-ranger]
  url   = gsissh://tg-login.ranger.tacc.teragrid.org/
  ctype = x509
  user  = 
  pass  = 
  cert  = 
  key   = 
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /scratch/projects/tg/SAGA/saga/1.6/gcc-3.4.6/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.gsissh-kraken]
  url   = gsissh://kraken-gsi.nics.utk.edu
  ctype = x509
  user  = 
  pass  = 
  cert  = 
  key   = 
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /nics/a/proj/saga/saga/1.6/gcc-4.1.2/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.gsissh-blacklight]
  url   = gsissh://tg-login.blacklight.psc.teragrid.org
  ctype = x509
  user  = 
  pass  = 
  cert  = 
  key   = 
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /usr/local/packages/tg/csasaga/saga/1.6/gcc-4.3.4/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.gsissh-lonestar]
  url   = gsissh://tg-login.lonestar.tacc.teragrid.org
  ctype = x509
  user  = 
  pass  = 
  cert  = 
  key   = 
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /share1/projects/tg/SAGA/saga/1.6/gcc-4.1.2/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.ssh-india]
  url   = ssh://india.futuregrid.org/
  ctype = ssh
  user  = merzky
  pass  = 
  cert  = 
  key   = 
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /N/soft/SAGA/saga/1.6/gcc-4.1.2/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.ssh-sierra]
  url   = ssh://sierra.futuregrid.org/
  ctype = ssh
  user  = merzky
  pass  = 
  cert  = 
  key   = 
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /N/soft/SAGA/saga/1.6/gcc-4.1.2/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.ssh-alamo]
  url   = ssh://alamo.futuregrid.org/
  ctype = ssh
  user  = merzky
  pass  = 
  cert  = 
  key   = 
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /N/soft/SAGA/saga/1.6/gcc-4.1.2/bin/saga-run.sh
  pwd   = 
  njobs = 1


[mandelbrot.backends.ssh-hotel]
  url   = ssh://hotel.futuregrid.org/
  ctype = ssh
  user  = merzky
  pass  = 
  cert  = 
  key   = 
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /N/soft/x86_64/el5/hotel/SAGA/saga/1.6/gcc-4.1.2/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.ssh-cct]
  url   = ssh://cyder.cct.lsu.edu/
  ctype = ssh
  user  = amerzky
  pass  = 
  cert  = 
  key   = 
  proxy = 
  cadir = 
  exe   = /home/amerzky/csa/saga/1.6/gcc-4.4.3/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.qcg-userpass-poznan]
  url   = https://grass1.man.poznan.pl:19021
  ctype = UserPass
  user  = ogf
  pass  = smoa-project.org
  cert  = 
  key   = 
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /home/ogf/install/bin/saga-run.sh
  pwd   = /home/ogf/
  njobs = 1
  url   = http://www.qoscosgrid.org/trac/qcg-computing

[mandelbrot.backends.qcg-x509-poznan]
  url   = https://grass1.man.poznan.pl:19022
  ctype = X509
  user  = 
  pass  = 
  cert  = /tmp/x509up_u$[mandelbrot.user_id]
  key   = /tmp/x509up_u$[mandelbrot.user_id]
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /home/ogf/install/bin/saga-run.sh
  pwd   = /home/ogf/
  njobs = 1
  url   = http://www.qoscosgrid.org/trac/qcg-computing
  admin = Mariusz Mamonski <mamonski@man.poznan.pl>

[mandelbrot.backends.gram-loni-queenbee]
  url   = gram://qb1.loni.org/
  ctype = x509
  user  = 
  pass  = 
  cert  = 
  key   = 
  proxy = /tmp/x509up_u$[mandelbrot.user_id]
# proxy = /Users/amerzky/x509up_u501_ncsa_until_december
  cadir = ${HOME}/.globus/certificates/
  exe   = /home/merzky/install/bin/saga-run.sh
  pwd   = /home/merzky/
  njobs = 1

[mandelbrot.backends.gram-deisa-lrz]
  url   = gram://lxgt2.lrz-muenchen.de/
  ctype = x509
  user  = 
  pass  = 
  cert  = 
  key   = 
  proxy = /tmp/x509up_u$[mandelbrot.user_id]
  cadir = ${HOME}/.globus/certificates/
  exe   = /home/cluster/pr95ho/lu26kov/install/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.gram-degrid-unido]
  url   = gram://udo-gt01.grid.tu-dortmund.de/
  ctype = x509
  user  = 
  pass  = 
  cert  = 
  key   = 
  proxy = /tmp/x509up_u$[mandelbrot.user_id]
  cadir = ${HOME}/.globus/certificates/
  exe   = /home/hp/hp0250/install/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.arc-hungary]
  url   = https://interop.grid.niif.hu:60000/arex-ut
# url   = https://localhost:10001/arex-ut
  ctype = UserPass
  user  = ogf30
  pass  = ogf30
  cert  = /tmp/x509up_u$[mandelbrot.user_id]
  key   = /tmp/x509up_u$[mandelbrot.user_id]
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /usr/local/saga/bin/saga-run.sh
# pwd   = /home/arc/
  pwd   = 
  njobs = 1

[mandelbrot.backends.genesis2-fg-india]
  url   = epr://localhost/${HOME}/.saga/fg.india.short.epr
  ctype = UserPass
  user  = ogf30
  pass  = ogf30
  cert  = /tmp/x509up_u$[mandelbrot.user_id]
  key   = /tmp/x509up_u$[mandelbrot.user_id]
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /N/u/merzky/install/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.genesis2-fg-sierra]
  url   = epr://localhost/${HOME}/.saga/fg.sierra.short.epr
  ctype = UserPass
  user  = ogf30
  pass  = ogf30
  cert  = /tmp/x509up_u$[mandelbrot.user_id]
  key   = /tmp/x509up_u$[mandelbrot.user_id]
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /N/soft/SAGA/saga/trunk/gcc-4.1.2/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.unicore-juelich]
  url   = https://zam1161v01.zam.kfa-juelich.de:8002/DEMO-SITE/services/BESFactory?res=default_bes_factory
  ctype = UserPass
  user  = ogf
  pass  = ogf
  cert  = /tmp/x509up_u$[mandelbrot.user_id]
  key   = /tmp/x509up_u$[mandelbrot.user_id]
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /home/unicoreinterop/install/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.unicore-fg-india]
  url   = https://149.165.146.134:8080/DEMO-SITE/services/BESFactory?res=default_bes_factory
# url   = https://localhost:10003/DEMO-SITE/services/BESFactory?res=default_bes_factory
  ctype = UserPass
  user  = ogf30
  pass  = ogf30
  cert  = /tmp/x509up_u$[mandelbrot.user_id]
  key   = /tmp/x509up_u$[mandelbrot.user_id]
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /usr/bin/env SAGA_VERBOSE=10 /N/soft/SAGA/saga/trunk/gcc-4.1.2/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.unicore-fg-sierra]
  url   = https://198.202.120.85:8080/DEMO-SITE/services/BESFactory?res=default_bes_factory
# url   = https://localhost:10003/DEMO-SITE/services/BESFactory?res=default_bes_factory
  ctype = UserPass
  user  = 
  pass  = 
  cert  = /tmp/x509up_u$[mandelbrot.user_id]
  key   = /tmp/x509up_u$[mandelbrot.user_id]
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /N/soft/SAGA/saga/trunk/gcc-4.1.2/bin/saga-run.sh
  pwd   = 
  njobs = 1

[mandelbrot.backends.gridsam-oxford]
# NOTE: GridSam needs a tunnel via cyder.cct.lsu.edu.
# url   = https://gridsam-test.oerc.ox.ac.uk:18443/gridsam/services/hpcbp
  url   = https://localhost:10004/gridsam/services/hpcbp
  ctype = UserPass
  user  = ogf30
  pass  = ogf30
  cert  = /tmp/x509up_u$[mandelbrot.user_id]
  key   = /tmp/x509up_u$[mandelbrot.user_id]
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /home/amerzky/install/bin/saga-run.sh
  pwd   = /home/amerzky/
  njobs = 1

[mandelbrot.backends.ec2-aws]
  url   = ec2://
  ctype = aws
  user  = ogf30
  pass  = ogf30
  cert  = /tmp/x509up_u$[mandelbrot.user_id]
  key   = /tmp/x509up_u$[mandelbrot.user_id]
  proxy = 
  cadir = ${HOME}/.saga/certificates/
  exe   = /usr/local/saga/bin/saga-run.sh
  pwd   = 
  njobs = 1


###############################################################
#
# fail safety test endpoints
#
#   -endpoint-missing-ini = yes    # endpoint section does not exist
#   -endpoint-missing     = yes    # endpoint does not exist
#   -endpoint-failing     = yes    # endpoint cannot be used to create job::service
#   -endpoint-job-fail    = yes    # endpoint can not create jobs
#   -endpoint-job-dummy   = yes    # job exe does not exist
#   -endpoint-job-awol    = yes    # job will start, but not register
#   -endpoint-job-lazy    = yes    # job will register, then do nothing
#   -endpoint-job-joke    = yes    # job delivers wrong results
#   -endpoint-job-bomb    = yes    # job removes work adverts

# [mandelbrot.backends.-endpoint-missing-ini]
#   url   = fork://localhost/
#   exe   = ${SAGA_LOCATION}/bin/saga-run.sh

[mandelbrot.backends.-endpoint-missing]
  url   = does://not/exist/har.har
  admin = andre--interop.epmiss@merzky.net

[mandelbrot.backends.-endpoint-failing]
  url   = ssh://localhost:1/
  admin = andre--interop.epfail@merzky.net

[mandelbrot.backends.-endpoint-job-fail]
# gram does no check on service creation, yet :-(
# Well, we can at least abuse that feature for this test :-)
  ctype = x509
  proxy = /tmp/x509up_u$[mandelbrot.user_id]
  url   = gram://localhost:1/  
  exe   = ${SAGA_LOCATION}/bin/saga-run.sh
  admin = andre--interop.fail@merzky.net

[mandelbrot.backends.-endpoint-job-dummy]
  url   = fork://localhost/
  exe   = /does/not/exist
  admin = andre--interop.dummy@merzky.net

[mandelbrot.backends.-endpoint-job-awol]
  url   = fork://localhost/
  exe   = /bin/cat
  admin = andre--interop.awol@merzky.net

[mandelbrot.backends.-endpoint-job-lazy]
  url   = fork://localhost/
  exe   = ${SAGA_LOCATION}/bin/saga-run.sh
  args  = lazy
  admin = andre--interop.lazy@merzky.net

[mandelbrot.backends.-endpoint-job-joke]
  url   = fork://localhost/
  exe   = ${SAGA_LOCATION}/bin/saga-run.sh
  args  = joke
  admin = andre--interop.joke@merzky.net

[mandelbrot.backends.-endpoint-job-bomb]
  url   = fork://localhost/
  exe   = ${SAGA_LOCATION}/bin/saga-run.sh
  args  = bomb
  admin = andre--interop.bomb@merzky.net

