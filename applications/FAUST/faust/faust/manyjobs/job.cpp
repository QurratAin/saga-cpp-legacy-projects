/*
 *  job.cpp
 *  FAUST - Framework for Adaptive Ubiquitous Scalable Tasks
 *
 *  Created by Ole Weidner on 11/22/08.
 *  Copyright 2008 Center for Computation & Technology. All rights reserved.
 *
 *  Distributed under the Boost Software License, Version 1.0. (See accompanying 
 *  LICENSE file or copy at http://www.boost.org/LICENSE_1_0.txt)
 */

#include <faust/faust/manyjobs/job.hpp>
#include <faust/impl/manyjobs/job_impl.hpp>

using namespace faust::manyjobs;

////////////////////////////////////////////////////////////////////////////////
//
job::job() 
: impl(new faust::impl::manyjobs::job_impl())
{
}

////////////////////////////////////////////////////////////////////////////////
//
void job::run() 
{ 
  impl->run(); 
}

////////////////////////////////////////////////////////////////////////////////
//
bool job::wait(double timeout) 
{ 
  return impl->wait(timeout); 
}

////////////////////////////////////////////////////////////////////////////////
//
bool job::cancel(double timeout) 
{ 
  return impl->cancel(timeout); 
}

////////////////////////////////////////////////////////////////////////////////
//
bool job::suspend() 
{ 
  return impl->suspend(); 
}

////////////////////////////////////////////////////////////////////////////////
//
bool job::resume() 
{ 
  return impl->suspend(); 
}

////////////////////////////////////////////////////////////////////////////////
//
std::string job::get_job_id() 
{ 
  return impl->get_job_id(); 
}      

////////////////////////////////////////////////////////////////////////////////
//
faust::manyjobs::state job::get_state()
{
  return impl->get_state();
}

////////////////////////////////////////////////////////////////////////////////
//
faust::manyjobs::description job::get_description()
{
  return impl->get_description();
}
