

Reviewer 1:

  - Overall, the experiences of Sec 5.2 and 5.3 have a feeling of
    "déjà vu".

  - Two main issues with Pilot Job are not addressed correctly in this
    paper : security and data.

  - the Pilot-Data API, which more or less mimics the PilotJob API is
    not very convincing in the sense that the interaction between the
    2 APIs are not discussed at all. Maybe Pilot-Data should be
    presented as part of the P* model and section 6 should be
    dedicated to the implementation of the 2 APIs to data-intense
    computing.



Reviewer 2:

  - Some of the choices and assumptions in the paper are not obvious.
    These could be elaborated upon.  What about other frameworks? Can
    they be incorporated? Why were these particular ones selected?  Is
    this really the first work of its kind? Are there no other related
    attempts?



Reviewer 3:

  - though the goal of a unified system to integrate all pilot systems
    is a rather elusive problem.


  - One of the challenging aspects of this paper is the determining
    how to evaluate it. The authors present results that demonstrate
    that the tool they have built is working -- however, while some of
    the figures present performance numbers, the authors acknowledge
    that the evaluation should not be considered a performance
    analysis of their framework, as the performance is based largely
    on the computing infrastructure the pilot frameworks they consider
    are designed for.

  - I would say that this research does have the potential to open up
    new areas -- particularly the ability to build a scheduler that
    can match the characteristics of a job to the cluster/framework
    that best suits it, while being pilot job framework agnostic.

  - It would however be a substantial improvement for the introduction
    to clearly define pilot jobs, and motivate the specific problem
    the authors are trying to solve. The primary motivation given is
    that in other frameworks that bear some similarity to pilot jobs,
    it has been hard to unify them.  
    
  - Claims such as "Pilot-Jobs have been one of the most successful
    abstractions in dis- tributed computing", while arguably true, are
    hard to justify without being clear about what is meant by pilot
    jobs.
    
  - In the end, the paper seems like a pilot job system for pilot job
    systems. 
    
  - While the work seemed sound, I was unconvinced by the paper that
    another layer of indirection and abstraction was the right
    solution for connecting together pilot job systems.
    
  - Perhaps another element which could strengthen the paper is a
    description, based on the authors analysis of pilot job systems,
    why pilot job systems cannot be unified in other ways.  
    
    

Reviewer 4:

  - This work seems important in practical relevance, but it is not
    clear how much fundamental work there really is here.

  - Unfortunately, the experimental results are not very convincing.
    Firstly, the overhead caused by interoperability (P*) is not
    provided. And the introduced overheads are critical in
    understanding if it is a worthwhile approach. Secondly, the
    demonstration of interoperability is overly simplified. For
    example, so of these pilot job systems were never meant to operate
    decoupled from their computational frameworks....

  - If the complex workflow dependency management is taken out of the
    equation, then why bother to talk about the features of these
    workflow systems, such as the data from Table 2? 

  - More metrics like traffic, slowdown, and job speedup are needed to
    be measured to be convincing.

 
  - The model seems
unnecessary, straight forward, with not much substance. 

  - Much of section 6 is repetitive The experiments are by far the
    weakest part of this paper. 
    
  - For the experiments parts, the authors didn't explain very well
    how they test the interoperability between Pilot-Jobs and
    infrastructures exist. The results are also hard to follow, why
    certain experiments are done, and how to interpret the results.
    Experiments are not clear enough to support the arguments. Does
    not say how to handle the case if the function in the framework
    can not be map to the P* Model. Also, I was expecting that more
    time would be spend on the Pilot-Data model, and how this
    translated to the various pilot-based systems.

  - Other trivial flaws: Section 4.1: "approach (ii) requires" should
    be approach (i) Figure 3: Physical Resource layer is confusing
    Section 5.1: Alamo and Sierra? Figure7: "The longer runtimes on
    EGI and OSG are mainly caused by the longer queuing times." is
    inconsistent with the figure

  - contradiction between first paragraph and later?


Reviewer 5:

