GYYE - Lock on Section 5
YYE - partial lock in Sec 2 + 3
JK - review comments in 2 + 3


fix grammatical errors fix references for

reviewer 2, first review to appear

Section 2 and 3
2.3
2.3.2
let's not touch the saga based pilot job

section 3
L1,L2,L3 discussion

putting it all together is missing
the end user perspective
the developer perspective

reviewer 1

**the advantage of using dare scripts as opposed to using native SAGA api scripts. 
->the advantages from dare scripts comes from the advantages of using bigjob. The relationship is not made clear enough in this paper.
->Dare is not just a set of scripts, it has application classes and workflows (reusability) generic scenarios and reusability are easily achievable. At this point we do not have everything sorted out yet.
**** Bring sharath in for this point

**** Sharath needs to be available for the next point section 2.2/2.3
**** Sharath needs to be available to answer: "what are the interfaces to the dare framework"
**** 

* For SM: Two approaches: (i) documentation on DARE website, (ii) show integration of MR with PJ (iii) Sharath to provide
a few paragraphs which talk about DARE e.g., Where does BigJob ends and where does DARE begin? and Definitions.

* YYE has lock on section 2 and 3 till Fri
* Next week 9pm Wednesday


Reviewer Comments:

Major Revisions requested GRID618
Inbox
x  
Notifications
x  
Shantenu Jha
x  
yye00@tacc.utexas.edu
x 


Journal of Grid Computing âœ†
Mar 27

to Yaakoub 
Dear Yaakoub,

We have received the reports from our advisors on your manuscript, "Dynamic Application Runtime Environment (DARE): A Standards-based Framework For Building Science Gateways", which you submitted to Journal of Grid Computing.

Based on the advice received, the Editors feel that your manuscript could be reconsidered for publication should you be prepared to incorporate major revisions.  When preparing your revised manuscript, you are asked to carefully consider the reviewer comments which are attached, and submit a list of responses to the comments.


In order to submit your revised manuscript, please access the following web site:

   http://grid.edmgr.com/

Your username is:  yye00
Your password is:  elkhamra773

We look forward to receiving your revised manuscript within eight weeks.

With kind regards,
Journals Editorial Office
P.O. Box 990
3300 AZ  DORDRECHT
The Netherlands

COMMENTS FOR THE AUTHOR:

Reviewer #2: A review of: Dynamic Application Runtime Environment (DARE): A Standards-based Framework For Building Science Gateways.

Much of the paper focuses upon describing SAGA and the SAGA-BJ/Pilot job architecture, rather than on describing how DARE provides added-value as an overlying abstraction layer. This is the main criticism of the paper. At one point, the authors indicate that DARE-core is a set of Python scripts that glue together SAGA API calls. Therefore, what are the advantages in using the DARE scripts over composing SAGA API calls in proprietary scripts where the developer has more control/ownership? (especially as the standards bit and abstraction is already provided by SAGA). While there is little doubt over the novelty and power of SAGA as an abstraction layer (as already testified in the previously published/cited papers), the novelty of DARE needs more supporting argument. The description of DARE-core in sections 2.3.2 and 3.3 also needs to elaborate on framework details, and why using DARE is a better choice than wrapping SAGA calls in proprietary scripts. For example, how is DARE
more reusable, what are the interfaces to the DARE framework? If these concerns can be justified, then the paper should be reconsidered for publication.

Examples of the higher level functionalities provided by DARE are outlined. For example, section 2.3.2 claims support for patterns-based execution, and section 3.2 classifies three different types of job/service supported by DARE. However, little content is given to describing how DARE is actually implemented and used by the gateway developer. Does DARE provide a language-agnostic API like SAGA (with a Python implementation), and/or are there other ways to compose a DARE execution pattern, such as a set of orchestrated tasks described in XSD? I was left with many questions such as; how are the execution patterns actually defined in DARE (DAG graphs?), how are data placement tasks described and scheduled, would a failed data placement task terminate the entire execution pattern, how is a batch workload and/or ensemble partitioned, can I integrate my own partitioning strategy and so on?

Much of the paper provides good supplementary content and discussion.  For example, the arguments in support of a standard-based approach for IDEA type applications are good (but this supports SAGA, not DARE). The background information, including the scientific uptake of gateways and the description between the different types of scaling is also good.  The authors also highlight some interesting observations, such that large scale Grids are unfortunately having to support multiple middleware solutions rather than unifying upon a single Job description language (JSDL or JDL for example - but again, this is addressed by SAGA not DARE).

In terms of content length and clarity, the paper can be overly wordy and is repetitive in some places. While these are issues are only of minor importance, it tends to make reading the paper laborious in parts and, more importantly, it obscures the clarity of the core arguments.  I recommend simplifying the text and bulleting core points, such as the core execution patterns supported by DARE and abstracted tasks provided by DARE.

Some specific examples where the text needs to be improved:
The entire paragraph at the bottom of page three is a single sentence with a number of grammar errors.

I counted a number of examples with missing sentence constructs and poor grammar. E.g. 'Many of [the] critical features of the DARE framework are provided by SAGA and [the] SAGA-based Pilot-Job capability' (there are more which are not listed here).
In the text, a reference is made to the pylons architecture using [13], this appears to be missing.
Top of page 7 [cite EGI].
Is table 1 referred to in text?



Reviewer #1: This paper outlines a framework for building science gateways that access distributed grid resources.


- "for most production distributed cyberinfrastructure, the proportion of resources devoted to the life sciences is already more than any discipline and the usage seems to be increasing. This is valid whether measured by number of cycles consumed, users or allocations." This statement probably needs a reference - actually I see the references later, but somehow they need to appear after this sentence as well.

- "by Next-Generation DNA Sequencing (NGS), and it associated challenge" should be "and its associated challenge"

- "Helped by the aforementioned four gateways, although existing life-science gate- ways account for a significant fraction of all gateway cycles usage, access to TG/XSEDE via gateways accounts for only a fraction of all cycles devoted to biosciences (which by most accounts represented 25% of TG/XSEDE (NU) cycles used in Q1-2011." I would break up this sentence. It seems to run on and is a bit confusing.

- HPDC needs to be defined the first time it is used (it is defined later on page 3).

- "tools & frameworks", need to spell out the word "and" (there are other such uses of & as well, all should be replaced)

- "SGs", while it's obvious what this stands for, it's probably better to spell out science gateways for the paper

- small nit pick in table 2, the capitalizations ("legacy Domain Scientific Code", "large Set of Tools" are not needed

- "runtime decisions related to scheduling and resource aggregation need to be taken", probably better to end with "need to be made", as in decisions need to be made

- "Pilot-Jobs have been shown to be an excellent abstraction", need to describe what Pilot-Jobs are.

- At the end of 2.1 "Fig. 5" is mentioned. Figure 5 is far down in the text.  The L2, L3, etc. references need to be introduced as level two, level three, etc. (I see this described later in section 3).

- On the subject of figures, Fig. 1 and Fig. 2 are not referenced in the text. The first reference to a figure in the text is Fig. 5, which is closer to the end of the doc. Figures should all be references and should be numbered and located in the order in which they are referenced. Tables should be checked as well.

- "At the AF level", what is AF?

- OGF - need to define the first time it's used (I see that it's defined just a bit after the first reference).

- "cite EGI" needs to be filled in

- not sure I understand the distinction between Pilot-Job and pilot-job at the end of 2.2

- "A SAGA-based PJ - BigJob (BJ) [8, 14], was introduced as a general-purpose pilot-job framework, with which various execution patterns and application usage modes have been supported [7, 15]. Previously, we demonstrated how SAGA-BigJob was able to execute scientific applications categorized as pleasingly parallel applications and loosely coupled applications on scalable distributed resources"  This makes it sound as if BigJob was described in this paper. Maybe reword this a bit to say that it was described in the referenced papers. Actually, section 2.3.1 reads as if it describes BJ quite a bit rather than PJ. The last 3 paragraphs of 2.3.1 all talk exclusively about BJ.

- M/W - spell out master/worker if that's what this is

- "Using pylons benefits primarily..." I would reword this a bit

- "unnecessary heavyweight" should be unnecessarily heavyweight

- "In brief, Type I & II represent services" - seems to be a hanging period after the paragraph in 3.2 that starts with this phrase.

- It would be nice to see one paragraph for each of the specific DARE gateways about what was learned from the specific implementation - what features of the framework worked particularly well, were there any particular challenges. It is often specific implementations that will result in adaptations to a general framework as more is learned about use cases. This was done for some of the specific examples, I think, but not for all.  -- After reading further, I see that this is covered in the Discussion. That's fine. Future work was alluded to in the discussion as well.

