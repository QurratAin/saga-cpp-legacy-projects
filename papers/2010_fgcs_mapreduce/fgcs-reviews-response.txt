Dear Prof. Sloot

Thank you for the opportunity to respond to the reviewers.

We thank the reviewers for their insightful and helpful comments.

Reviewers' comments:

Reviewer #1: 
In Abstract, what is the meaning of abbreviation, SAGA, it needs to be
explained in advance for readability. 

Authors: This has been done. 

Reviewer #1: The definition of MapReduce should also be introduced at
first.  There are several kinds of this word "MapReduce" found in this
manuscript, such as mapreduce, Mapreduce, MapReduce. They should be
consistent to unique.

Authors: This has been done. A much improved discussion of MapReduce
is presented, including a detailed figure.

Reviewer #1: In Introduction, the definition of PM is not given. The
full name of PM should be given in the first occurrence. 

Authors: We now use the full 'programming model' and not PM

Reviewer #1: The reference citations for examples used in this
manuscript, for instance, Earth-Science Gird and Google's MapReduce,
are required to append for reference if needed. 

Authors: We have included explicit reference to ESG and MapReduce.

Reviewer #1: The same problems for abbreviations are given as
follows. In Section 2, What is the full name of abbreviation, EC2?  In
Section 3, 4 and 5, What is VM?

Authors: We have expanded on VM. We have not expanded upopn EC2 as we
find that the community in general has adopted EC2 as the 'reference
model' and not the full name.

Reviewer #1: According to the major issue of this research -
application-level interoperability, first of all, the authors should
give a clear definition for the problem met to utilize resources on
grid, cloud and cluster systems, and then indicate their major
difference and attributions of these resources under the view of
software or hardware architecture or other possible
perspectives. Finally, introduce the proposed method to solve the
problem.

Authors: We believe we spend the first two pages setting up the reason
why ALI is required. There just isn't the ability to move all that
data around into a single site (eg Earth System grdi) and thus there
is a need to operate on data in-situ. This automatically implies
working with hetereogeneity and different systems. And thus to work
collectively and concurrently, ALI becomes a critical requirement.

Reviewer #1: In Section 4, the authors should explain the reasons why
propose three interoperability types. Do they have the relation with
the resource management problems on these three backend systems, or
just three usable programming models for the SAGA? 

Authors: The point is the following (which has been enhanced in the
text): we do not know how to engineer ALI a priori for an application,
i.e., at what level and how it should be provided. Through our
implementation and analysis of the three levels, we establish that
different performance challenges and functional capabilities arise;
understanding these "trade-offs" is important in order to implement
ALI at the "right level".

Reviewer #1: The detail about enhanced SAGA-MapReduce proposed in this
manuscript is not explained clearly. What is the improvement or
difference while comparing to original one.

We have significantly improved the discussion of SAGA-MapReduce --
both functionally and in comparision to earlier versions.

Reviewer #1: The effort of this research is to demonstrate and show
the measured simulation result of the wordcout application implemented
by their SAGA API. The contribution of this research itself is low,
because no new method is proposed to solve some problem. Some critical
elements in this manuscript are published before, such as the SAGA API
was proposed in [9], and SAGA-MapReduce was introduced in [17].

Authors: We respectfully disagree with the reviewer that the
contribution is measuring word-count using SAGA. It is as alluded to
above, using MR an analysis of ALI, the different levels, the
different challenges & performance barriers. We agree that no new
method is proposed; what is proposed is comparing and contrasting
three different methods.

Reviewer #1: In Section 5, experiment result merely shows the
performance of original SAGA-MapReduce and its enhanced version. There
is no comparison with related works by others.

Authors: We have improved this, but we have not gone into a detailed
performance and quantitative analysis.  This is because one does not
have the ability to look inside the box of say "Hadoop"; what we
wanted to expose are the primary determinants of performance (eg
number of workers, chunk-size, degree-of-distribution etc) so as to
provide an understanding of how a end-user may reason about the
application.

Reviewer #1: Some typo errors in References [1], the journal title
"Concurrency and Computation: Practise and Engineering" should be
corrected to "Concurrency and Computation: Practices and Experience".
In Reference [7] an [8], some information should be given to explain
the web side address.

Authors: This has been done.

Reviewer #2: The authors discuss on the issue of application-level
interoperability by taking wordcount as a simple case to run on SAGA
with multiple programming models. Some theoretical analysis and simple
experiments are given. However, the motivation is not clear. What is
the problem in the real world the paper wants to solve? 

Authors: We believe that in addressing early remarks of Reveiwer #1,
we have also addressed these.

Reviwer #1: It could perhaps be helpful if the authors compare your
ideas with some related works and give some practical use cases for
better understanding on the concept of ALI as well as its impacts.
Another minor problem is about references, most of which are from
similar authors - is there someone by others fit to be refered?

The two remarks above are somewhat related, and hence so is our
response. We acknowledge the existence of self-references. But a
search for application-level interoperabilty will reveal very limited
literature; however we have expanded to include several other
references.



