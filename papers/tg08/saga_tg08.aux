\relax 
\ifx\hyper@anchor\@undefined
\global \let \oldcontentsline\contentsline
\gdef \contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global \let \oldnewlabel\newlabel
\gdef \newlabel#1#2{\newlabelxx{#1}#2}
\gdef \newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\let \contentsline\oldcontentsline
\let \newlabel\oldnewlabel}
\else
\global \let \hyper@last\relax 
\fi

\citation{gat}
\citation{cog}
\citation{realitygrid}
\citation{DataAssim}
\citation{KalmanPaper}
\citation{gridsat03}
\citation{majority_voting}
\citation{cactusworm}
\citation{apples03}
\citation{apples03}
\@writefile{toc}{\contentsline {section}{\numberline {I}Introduction}{1}{section.1}}
\citation{teragridfuture}
\citation{escience07}
\citation{bqp}
\citation{bqp_url}
\citation{DataAssim}
\citation{KalmanPaper}
\citation{LiEnKF07}
\citation{DO2007}
\citation{DO2006}
\citation{DataAssim}
\citation{KalmanPaper}
\citation{escience07}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Schematic illustrating the irregular execution or hard-to-predict run-time characteristics of a prototype implementation of an ensemble kalman filter. The end-to-end application consists of several stages; in general at each stage the number of models generated varies. In the specific case studied in this paper, the size and granularity of the models varied within a stage. Consequently for any given stage the resource requirements varied from 8 processors to 64 processors. The run time of each model was unpredictable and uncorrelated with the run-time of models on running on the same number of processors -- a truly independent variable. At every stage, each model must converge to within a specified value before the next stage can begin, hence dynamically load-balancing so as to ensure that all models complete as close to each other as possible is the desired aim.}}{3}{figure.1}}
\newlabel{fig:irregular_execution}{{1}{3}{Motivation: Ensemble Kalman Filters\relax }{figure.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {II}Application: Description and Motivation}{3}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {II-A}}Motivation: Ensemble Kalman Filters}{3}{subsection.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {II-B}}Application Outline}{3}{subsection.2.2}}
\citation{ogf_web}
\citation{saga-core}
\citation{drmaa_url}
\citation{gridrpc_url}
\citation{saga_web}
\citation{escience07}
\citation{cactus_web}
\citation{X0}
\citation{netperf_web}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {II-B}1}SAGA}{4}{subsubsection.2.2.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {II-B}2}The Cactus Code\nobreakspace  {}\cite  {cactus_web}}{4}{subsubsection.2.2.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {II-B}3}Why SAGA and Cactus?}{4}{subsubsection.2.2.3}}
\citation{bqp}
\citation{PETSc}
\citation{netperf_web}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces The main components of the prototype implementation of Cactus based ensemble Kalman filter application. The central orchestrating component is the Cactus Flesh; each thorn -- of which there are several -- implements a specific, well encapsulated functionality. SAGA functionality is provided via a library and is accessed through several thorns (such as the Submit thorn). The thorns are also the interface to 'services' such as the Advert service, which in turn uses the SAGA API to interface with Google Maps. We believe this is an interesting case where an application at run-time is able to provide information dynamically to Google Maps.}}{5}{figure.2}}
\newlabel{fig:application_architecture}{{2}{5}{Application Implementation and Control Flow\relax }{figure.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {II-B}4}BQP}{5}{subsubsection.2.2.4}}
\@writefile{toc}{\contentsline {section}{\numberline {III}Application Implementation and Control Flow}{5}{section.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-A}}Simulation Thorn}{5}{subsection.3.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-B}}BQP Thorn}{5}{subsection.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-C}}ResourceMap Thorn}{5}{subsection.3.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-D}}Submit Thorn}{5}{subsection.3.4}}
\citation{google_maps}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-E}}PerfMatrix}{6}{subsection.3.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-F}}Control Flow}{6}{subsection.3.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-G}}Interfacing with Google Maps}{6}{subsection.3.7}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces A high-level overview of the control flow for the SAGA-Cactus based ensemble Kalman filter application. Models are generated and these are mapped to appropriate resources. This is done based upon the number of grid points in the model (which in turn determines the number of processors and memory) and the projected run-time (which is based upon estimated number of iterations). To a first approximation the data from BQP is utilized to determine the optimal resource -- defined as that resource with the highest chances of finishing a job with the prescribed characteristics (number of processors, duration) first. Obviously this is just a best effort guesstimate, as the actual run-time (number of iterations) is difficult to get correct (as it depends upon convergence to a value). After all models (n instances) in a given stage have finished there is a global synchronization point which in turn is the basis for providing models for the next stage (m iterations).}}{6}{figure.3}}
\newlabel{fig:controlflow}{{3}{6}{Control Flow\relax }{figure.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Google maps application showing the live BQP data retrieved from the central advert service using the SAGA Python bindings (\url  {http://fortytwo.cct.lsu.edu/teragrid/teragrid.html}).}}{7}{figure.4}}
\newlabel{fig:gmaps_bqp}{{4}{7}{Interfacing with Google Maps\relax }{figure.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {IV}Infrastructure Used \& Deployment Details}{7}{section.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {IV-A}}Infrastructure}{7}{subsection.4.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {IV-B}}Deployment}{7}{subsection.4.2}}
\@writefile{toc}{\contentsline {section}{\numberline {V}Results and Discussion}{7}{section.5}}
\citation{DO2007}
\citation{gin_paper}
\citation{nature99}
\bibstyle{IEEEtran}
\bibdata{saga_tg08}
\bibcite{gat}{1}
\bibcite{cog}{2}
\bibcite{realitygrid}{3}
\bibcite{DataAssim}{4}
\bibcite{KalmanPaper}{5}
\bibcite{gridsat03}{6}
\bibcite{majority_voting}{7}
\bibcite{cactusworm}{8}
\bibcite{apples03}{9}
\bibcite{teragridfuture}{10}
\bibcite{escience07}{11}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {V-A}}BQP Results}{8}{subsection.5.1}}
\@writefile{toc}{\contentsline {section}{\numberline {VI}Future Work and Conclusion}{8}{section.6}}
\@writefile{toc}{\contentsline {section}{\numberline {VII}Acknowledgements}{8}{section.7}}
\@writefile{toc}{\contentsline {section}{References}{8}{section*.2}}
\bibcite{bqp}{12}
\bibcite{bqp_url}{13}
\bibcite{LiEnKF07}{14}
\bibcite{DO2007}{15}
\bibcite{DO2006}{16}
\bibcite{ogf_web}{17}
\bibcite{saga-core}{18}
\bibcite{drmaa_url}{19}
\bibcite{gridrpc_url}{20}
\bibcite{saga_web}{21}
\bibcite{cactus_web}{22}
\bibcite{X0}{23}
\bibcite{netperf_web}{24}
\bibcite{PETSc}{25}
\bibcite{google_maps}{26}
\bibcite{gin_paper}{27}
\bibcite{nature99}{28}
