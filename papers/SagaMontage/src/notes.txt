 - Motivation for rewriting Montage using SAGA.
   -- Montage, a benchmark application
   -- Limitations of Montage when used with Pegasus and DAGMAN
      --- static scheduling, i.e., need source and desitination. Pegasus does	
      upfront placement.
      --- dependence on DAGMAN(!)
      --- rigid execution model. We want to just define the rules and not the DAG!
   -- Currently not programmed distributedly, but executed as an legacy application
      in distributed mode.
         
 - Three levels at which SAGA can be integrated with Montage:
   (i) Replace Pegasus and DAGMAN, i.e., write/generate a DAG or the rules using SAGA?
       determine what goes where, how, and programmatically control relative placement of
       data w.r.t compute
   (ii) Use SAGMan in lieu of DAGMAN, that is, now that we have a DAG,
        let us execute the DAG using SAGA
   (iii) Use SAGA in lieu of Condor. i.e. SAGA becomes the interface to Condor and other
   systems as opposed to Condor becoming the interface to other systems via Condor-G.
   Advantage of this is that now data/file transfer and other functionality is all
   integrated with job submission.


 
