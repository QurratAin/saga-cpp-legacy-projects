
----------------------- REVIEW 1 ---------------------
PAPER: 124
TITLE: P*: A Model of Pilot-Abstractions
AUTHORS: Andre Luckow, Mark Santcroos, Ole Weidner, Andre Merzky, Pradeep Kumar Mantha and Shantenu Jha

OVERALL RATING: 2 (accept)
REVIEWER'S CONFIDENCE: 2 (medium)
Relevance to conference: 5 (excellent)

This paper is concerned with the pilot jobs approach for supporting
effective distributed resource allocations.

The paper is concerned with a providing a model (P*) of pilot jobs
that is both minimal and complete. The paper sets pout to establish the
generality of this model, to provide an API, to validate the implementation
and to apply the implementation to model data. The paper notes that this
approach is used on every large-scale distributed cyber infrastructure.

The authors provide a clean and easy-to-read description of P* and show
how many existing frameworks fit into this model. Their description
provides a clear unification of many seemingly disparate approaches.
Indeed the API constructed by the authors serves as a common interface
to many of these methods.

The results section discusses the performanec of these systems and provides
some comparison between them. Issues such as scalability are addressed and it
is found that there are some challenges in these areas. A solution is
proposed.

In summary this ppaer does a good job of explaining an abstarct model that
applied in a number of cases and provides a unifying model. The model
not only helps to clarify the situation with regard to many existing methods
but has also been used on production scale science.

While this is not the most exciting paper that the reviewer has read it is
not clear that infrastructure is ever such a topic. The paper is well-written
and clear and explains many seemingly disparate aprpaoches within a common
framework in a way that helps e-escience.


----------------------- REVIEW 2 ---------------------
PAPER: 124
TITLE: P*: A Model of Pilot-Abstractions
AUTHORS: Andre Luckow, Mark Santcroos, Ole Weidner, Andre Merzky, Pradeep Kumar Mantha and Shantenu Jha

OVERALL RATING: 0 (borderline paper)
REVIEWER'S CONFIDENCE: 3 (high)
Relevance to conference: 3 (fair)

P* describes a model for Pilot Jobs and the authors show how they are able to support the different implementations through this model. There are a number of pilot job implementations and an abstraction could directly lead to better adoption and portability of such frameworks. The pape presents the model, shows how it integrates with existing systems and has some evaluation.

The paper is 2 pages longer than the CFP specifications. In spite of it being longer, the paper is still missing some key details so it is not entirely obvious how this paper would rate if it was cut short further.


Figure 1, 2 and 3 seem a bit excessive since they a fair amount of commonality. Figure 1 should be explained in the context of a user application for it to be more easily readable. The Pilot Data also seems to out of place with most of the rest of the paper. The paper is pretty light on the science aspects and how this helps science apps and what kind of apps might benefit from this.

The description of the API would have been interesting and important to understand the power of this abstraction. But the authors do not devote much space for it in the paper. The paper refer to the Pareto principle in the paper which should be explained and/or use the more common phrasing of 80-20 rule.

Section V is fairly lacking in details on the testbed and workload. The conclusion seems to be that the network s the bottleneck in these cases but the network characteristics are not mentioned. The paper states that they move a 1.9 GB file. That is not really a very big file so it is a bit worrying that causes your bottleneck. Each experiment seems to have run on a different testbed or part of testbed. A simple table mapping experiments and the setup could help the user.

Nits

FG is used without declaring what the acronym stands for
In stead -> Instead


----------------------- REVIEW 3 ---------------------
PAPER: 124
TITLE: P*: A Model of Pilot-Abstractions
AUTHORS: Andre Luckow, Mark Santcroos, Ole Weidner, Andre Merzky, Pradeep Kumar Mantha and Shantenu Jha

OVERALL RATING: 2 (accept)
REVIEWER'S CONFIDENCE: 2 (medium)
Relevance to conference: 4 (good)

This is a well-written paper which defines Pilot jobs and presents an abstract model for Pilot Jobs. Pilot jobs are getting used extensively in grids cyber-infrastructure projects and represents an important part of the current cyber-infrastructures. This paper provides the P* model of Pilot-Jobs, apply it to existing Pilot-Job frameworks such as Condor, bigJob and DIANE, develop an API based on the P* Model and presents a data abstraction for Pilot Jobs as well. This paper further validates the Pilot-API by using it with different cyber infrastructures. The authors also present performance results showing the advantages of using the Pilot-Data system for data movement and management. This is a useful paper which can be used as a reference for Pilot-Job related implementations and publications.

1. The authors do not present a compelling use case for using different Pilot Jobs by the same application concurrently or in other words the reason for needing interoperability among Pilot job frameworks. It would be useful if the authors can provide more justification and real world use cases for such usages. One could imagine that the Pilot-Job framework for an application is implementation dependent (e.g. a Condor DAG based workflow) and would be bound to a particular Pilot Job framework.

2. The functionality and the responsibilities of the Pilot-Data is not clear. It would be useful if the authors present a more detailed description of the Pilot-Data framework and why or whether it is an integral part of Pilot-Jobs.

3. In the paper, the authors claim that the performance of the applications can be increased by decreasing the staging time by scheduling the tasks in different resources.  What would be the alternatives in cases where the application tasks needs to communicate with each other heavily? How would the Pilot-Data help in a scenario like this?


----------------------- REVIEW 4 ---------------------
PAPER: 124
TITLE: P*: A Model of Pilot-Abstractions
AUTHORS: Andre Luckow, Mark Santcroos, Ole Weidner, Andre Merzky, Pradeep Kumar Mantha and Shantenu Jha

OVERALL RATING: 0 (borderline paper)
REVIEWER'S CONFIDENCE: 3 (high)
Relevance to conference: 4 (good)

The authors present P*, a model of pilot job abstractions.

The contribution of this paper is the extraction of pilot job system operations into a model.
The model itself is rather straightforward though.

I am not sure which problems the authors are solving with their model actually. Does this model
allow to build better pilot job systems? (hardly) Does it allow performance optimizations?
(Well, anything involving globus gram is beyond the critical path, so no.) Is there a correctness issue? (I doubt)

This leaves us with the portability issue for applications running on top of different pilot job systems. But why would this be a real issue? If we are going to build a portability layer, then why not directly on top of the underlying system software / middleware?
Still, if I accept the need for a portable pilot job api (derived from the p* model), why is this
not presented in this paper (but cited to the authors' www site)?